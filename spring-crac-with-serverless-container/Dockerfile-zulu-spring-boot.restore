FROM azul/zulu-openjdk:21-jdk-crac-latest as builder

RUN apt update && \
	DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install liblz4-tool libnl-3-dev && \
	apt clean && \
	rm -rf /var/lib/apt /var/cache/apt
	
	
# RUN --mount=type=secret,target=/root/.aws/config,id=+secrets/config --mount=type=secret,target=/root/.aws/credentials,id=+secrets/credentials	
RUN echo $JAVA_HOME

COPY cr /cr
RUN tar -c /cr | lz4 -z -9 - /cr.tar.lz4

COPY restore.cmd-zulu-spring-boot.sh /
COPY prepare-restore-jdk.cmd-zulu-spring-boot.sh /

#replace criu file from the older azul crac jdk version
COPY criu $JAVA_HOME/lib/

# Copy function code and runtime dependencies from Maven layout
COPY target/classes /function
COPY target/dependency/* /function/lib/


RUN /prepare-restore-jdk.cmd-zulu-spring-boot.sh ; \
	cd /function/lib;  $JAVA_HOME/bin/jar -x -f aws-lambda-java-runtime-interface-client*.jar \
		aws-lambda-runtime-interface-client.musl.so \
		aws-lambda-runtime-interface-client.glibc.so
		
WORKDIR /function

ENV PRODUCT_TABLE_NAME=AWSLambdaSpringBoot32Java21DockerImageAndCRaCProductsTable
RUN echo "ENV variable value is $PRODUCT_TABLE_NAME"

ENTRYPOINT [ "/bin/bash", "/restore.cmd-zulu-spring-boot.sh" ]

# Set the CMD to your handler (could also be done as a parameter override outside of the Dockerfile)
CMD [ "software.amazonaws.example.product.handler.StreamLambdaHandler::handleRequest" ]
